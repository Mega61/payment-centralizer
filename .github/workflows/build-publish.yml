name: Build and Publish

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'package*.json'
      - 'tsconfig*.json'
      - 'Dockerfile'
      - '.github/workflows/build-publish.yml'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    outputs:
      image-digest: ${{ steps.build.outputs.digest }}
      image-tag: ${{ steps.version.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from package.json
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=v${VERSION}" >> $GITHUB_OUTPUT
          echo "üì¶ Building version: v${VERSION}"

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/payment-centralizer/app:${{ steps.version.outputs.version }}
            ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/payment-centralizer/app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: Output image information
        run: |
          echo "‚úÖ Image built and pushed successfully!"
          echo "üì¶ Image tag: ${{ steps.version.outputs.version }}"
          echo "üîó Image digest: ${{ steps.build.outputs.digest }}"
          echo "üåê Full image path: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/payment-centralizer/app:${{ steps.version.outputs.version }}"

  trigger-deploy:
    name: Trigger Deployment
    needs: build-and-push
    uses: ./.github/workflows/deploy.yml
    secrets: inherit
    with:
      image-tag: ${{ needs.build-and-push.outputs.image-tag }}
